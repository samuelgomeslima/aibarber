-- Cash register ledger schema for Supabase
-- Run these statements inside the `public` schema of your project.

create table if not exists public.cash_register_entries (
  id uuid primary key default gen_random_uuid(),
  entry_type text not null check (entry_type in ('service_sale', 'product_sale', 'adjustment')),
  source_id text,
  source_name text not null,
  quantity integer not null default 1 check (quantity > 0),
  unit_amount_cents integer,
  amount_cents integer not null,
  reference_id text,
  note text,
  created_at timestamptz not null default timezone('utc', now()),
  created_by uuid references auth.users(id)
);

alter table public.cash_register_entries
  add constraint cash_register_unit_amount_check
  check (unit_amount_cents is null or unit_amount_cents >= 0);

create index if not exists cash_register_entries_created_at_idx
  on public.cash_register_entries (created_at desc);

create index if not exists cash_register_entries_entry_type_idx
  on public.cash_register_entries (entry_type, created_at desc);

comment on table public.cash_register_entries is
  'Stores every cash movement generated by services and product sales.';

comment on column public.cash_register_entries.source_id is
  'Stores the related service or product identifier when available.';

comment on column public.cash_register_entries.reference_id is
  'Optional external reference such as a booking id.';

create view if not exists public.cash_register_daily_totals as
select
  date_trunc('day', created_at) as day,
  entry_type,
  sum(amount_cents) as amount_cents
from public.cash_register_entries
group by 1, 2
order by 1 desc, 2;

comment on view public.cash_register_daily_totals is
  'Aggregated totals by day and entry type.';

alter table public.cash_register_entries enable row level security;

create policy if not exists "Authenticated users can read cash register entries" on public.cash_register_entries
for select using (auth.role() = 'authenticated');

create policy if not exists "Authenticated users can manage cash register entries" on public.cash_register_entries
for all using (auth.role() = 'authenticated')
  with check (auth.role() = 'authenticated');

create policy if not exists "Service role can manage cash register entries" on public.cash_register_entries
for all using (auth.role() = 'service_role')
  with check (auth.role() = 'service_role');
